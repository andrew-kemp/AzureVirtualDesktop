{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "10188928939667202035"
    }
  },
  "parameters": {
    "sessionHostPrefix": {
      "type": "string",
      "defaultValue": "AVD",
      "metadata": {
        "description": "Prefix for all session hosts"
      }
    },
    "numberOfHosts": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of session hosts to deploy"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for session hosts"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "AVD-Admin",
      "metadata": {
        "description": "Admin username for session hosts"
      }
    },
    "hostPoolRegistrationInfoToken": {
      "type": "string",
      "defaultValue": "Enter HostPool Registration Key here",
      "metadata": {
        "description": "Registration key for the AVD host pool"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "defaultValue": "Core-Services",
      "metadata": {
        "description": "Resource group containing the vNet"
      }
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "Master-vNet",
      "metadata": {
        "description": "Name of the vNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "AzureVirtualDesktop",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Storage Account (e.g. \"kempystorage\")"
      }
    },
    "dns1": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Primary DNS server for session hosts (leave blank for default)"
      }
    },
    "dns2": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Secondary DNS server for session hosts (leave blank for default or only use one)"
      }
    },
    "sessionHostPrepScriptUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/andrew-kemp/AzureVirtualDesktop/refs/heads/main/02a-SessionHostPrep.ps1",
      "metadata": {
        "description": "URL of the SessionHostPrep.ps1 script"
      }
    }
  },
  "variables": {
    "fsProfilesPath": "[format('\\\\{0}.file.{1}\\profiles', parameters('storageAccountName'), environment().suffixes.storage)]",
    "fsRedirectionPath": "[format('\\\\{0}.file.{1}\\redirections', parameters('storageAccountName'), environment().suffixes.storage)]",
    "modulesURL": "[format('https://wvdportalstorageblob.blob.{0}/galleryartifacts/Configuration_1.0.02797.442.zip', environment().suffixes.storage)]",
    "sessionHostPrepScriptName": "[substring(parameters('sessionHostPrepScriptUrl'), add(lastIndexOf(parameters('sessionHostPrepScriptUrl'), '/'), 1))]",
    "dnsServers": "[concat(if(empty(parameters('dns1')), createArray(), createArray(parameters('dns1'))), if(empty(parameters('dns2')), createArray(), createArray(parameters('dns2'))))]"
  },
  "resources": [
    {
      "copy": {
        "name": "nic",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format('{0}-{1}-nic', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()])]",
      "location": "[resourceGroup().location]",
      "properties": "[union(createObject('ipConfigurations', createArray(createObject('name', 'ipconfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('vNetResourceGroup')), 'Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('vNetName'), parameters('subnetName')), '/')[0], split(format('{0}/{1}', parameters('vNetName'), parameters('subnetName')), '/')[1])))))), if(empty(variables('dnsServers')), createObject(), createObject('dnsSettings', createObject('dnsServers', variables('dnsServers')))))]"
    },
    {
      "copy": {
        "name": "VM",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()])]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_d2as_v5"
        },
        "osProfile": {
          "computerName": "[format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()])]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-11",
            "sku": "win11-24h2-avd",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "diskSizeGB": 256
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-{1}-nic', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-{1}-nic', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
      ]
    },
    {
      "copy": {
        "name": "entraIdJoin",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]), format('{0}-{1}-EntraJoinEntrollIntune', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()]))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.ActiveDirectory",
        "type": "AADLoginForWindows",
        "typeHandlerVersion": "2.2",
        "autoUpgradeMinorVersion": true,
        "enableAutomaticUpgrade": false,
        "settings": {
          "mdmId": "0000000a-0000-0000-c000-000000000000"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
      ]
    },
    {
      "copy": {
        "name": "guestAttestationExtension",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-07-01",
      "name": "[format('{0}/{1}', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]), format('{0}-{1}-guestAttestationExtension', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()]))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Azure.Security.WindowsAttestation",
        "type": "GuestAttestation",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true
      },
      "dependsOn": [
        "entraIdJoin",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
      ]
    },
    {
      "copy": {
        "name": "SessionPrep",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]), format('{0}-{1}-SessionPrep', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()]))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[parameters('sessionHostPrepScriptUrl')]"
          ],
          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File .\\{0} -ProfilesPath \"{1}\" -RedirectionPath \"{2}\"', variables('sessionHostPrepScriptName'), variables('fsProfilesPath'), variables('fsRedirectionPath'))]"
        }
      },
      "dependsOn": [
        "guestAttestationExtension",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
      ]
    },
    {
      "copy": {
        "name": "dcs",
        "count": "[length(range(0, parameters('numberOfHosts')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}/{1}', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]), format('{0}-{1}-JointoHostPool', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[copyIndex()]))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "settings": {
          "modulesUrl": "[variables('modulesURL')]",
          "configurationFunction": "Configuration.ps1\\AddSessionHost",
          "properties": {
            "hostPoolName": "[format('{0}-HostPool', parameters('sessionHostPrefix'))]",
            "aadJoin": true
          }
        },
        "protectedSettings": {
          "properties": {
            "registrationInfoToken": "[parameters('hostPoolRegistrationInfoToken')]"
          }
        }
      },
      "dependsOn": [
        "SessionPrep",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('sessionHostPrefix'), range(0, parameters('numberOfHosts'))[range(0, parameters('numberOfHosts'))[copyIndex()]]))]"
      ]
    }
  ],
  "outputs": {
    "postDeploymentInstructions": {
      "type": "string",
      "value": "MANUAL STEPS REQUIRED:\n1. Update the AVD enterprise app and grant it permission.\n2. Exclude the storage app from Conditional Access policies.\n3. Add the folder permissions via a hybrid-joined client.\n4. Assign AAD/Entra groups to AVD Application Groups using PowerShell or Portal.\n5. Update the Session Desktop friendly name via PowerShell if needed.\n6. Please update internal DNS to point ${storageAccountName}.file.${environment().suffixes.storage} to the IP address it has been assigned to.\n   (Note: If you are using a Private Endpoint, you can retrieve the assigned IP from the Private Endpoint NIC in the Azure portal.)\n"
    }
  }
}